
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> rm(.Random.seed)
> library(adm)
> data(scotland)
> #par(mfrow=c(1,3))
> true<-rep(0,52)
> true[18:40]<-1
> true[23:25]<-true[29:32]<-true[35:37]<-2
> #map(true,scotland.shape)
> 
> scotland.sim<-scotland.data[,-3]
> scotland.sim$E<-rpois(52,scotland.data$E-1)+1
> globalgamma<-sample(c(-1,0,1))
> gamma.true<-rnorm(52,globalgamma[true+1],.01)
> #map(gamma.true,scotland.shape)
> 
> scotland.sim$Counts<-rpois(52,scotland.sim$E*exp(gamma.true))
> #map(scotland.sim$Counts,scotland.shape)
> #map(scotland.sim$Counts/scotland.sim$E,scotland.shape)
> 
> options(mc.cores=4)
> 
> scoti<-adm(scotland.sim$Counts, scotland.sim$E, scotland.coords, nr.it=20000, burnin=10000, thin=5, nu=1, adaptive=FALSE, method="", do.kappa=TRUE,  kappa=1, ab.kappa=c(1,.001), tau=1000, print.time=FALSE)
Loading required package: Matrix
Loading required package: parallel
Loading required package: truncnorm
................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................> gammai<-apply(scoti$gamma,2,mean,na.rm=TRUE)
> #cuts<-seq(-1.7,1.7,length=32)
> #map(gammai,scotland.shape,cutpoints=cuts)
> #map(gamma.true,scotland.shape,cutpoints=cuts)
> scota<-adm(scotland.sim$Counts, scotland.sim$E, scotland.coords, nr.it=20000, burnin=10000, thin=5, nu=1, adaptive=TRUE, method="gibbs2beta", do.kappa=FALSE,  kappa=1, ab.kappa=c(1,.001), tau=1000, print.time=FALSE)
gammaa<-apply(scota$gamma,2,mean,na.rm=TRUE)
> #map(gammaa,scotland.shape,cutpoints=cuts)
> 
> #par(mfrow=c(1,1))
> #plot(gamma.true,gammai)
> #points(gamma.true,gammaa,col="blue")
> error.i<-(gamma.true-gam...........................................................................................................................> gammaa<-apply(scota$gamma,2,mean,na.rm=TRUE)
> #map(gammaa,scotland.shape,cutpoints=cuts)
> 
> #par(mfrow=c(1,1))
> #plot(gamma.true,gammai)
> #points(gamma.true,gammaa,col="blue")
> error.i<-(gamma.true-gammai)^2
> error.a<-(gamma.true-gammaa)^2
> 
> #plot(gammaa,gammai)
> #lines(c(-10,10),c(-10,10))
> 
> code=paste0(sample(c(LETTERS,letters,0:9),6,rep=TRUE),collapse="")
> write(c(sum(error.i),sum(error.a)),file="scot_error.txt",append=TRUE)
> save.image(file=paste0("scot/",code,".Rdata"))
> 
> 
> proc.time()
    user   system  elapsed 
2809.875  362.258 7063.393 
Error in save.image(name) : 
  image could not be renamed and is left in .RDataTmp7
Calls: sys.save.image -> save.image
In addition: Warning message:
In file.rename(outfile, file) :
  cannot rename file '.RDataTmp7' to '.RData', reason 'No such file or directory'
Execution halted
d
